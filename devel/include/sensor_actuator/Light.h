// Generated by gencpp from file sensor_actuator/Light.msg
// DO NOT EDIT!


#ifndef SENSOR_ACTUATOR_MESSAGE_LIGHT_H
#define SENSOR_ACTUATOR_MESSAGE_LIGHT_H

#include <ros/service_traits.h>


#include <sensor_actuator/LightRequest.h>
#include <sensor_actuator/LightResponse.h>


namespace sensor_actuator
{

struct Light
{

typedef LightRequest Request;
typedef LightResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Light
} // namespace sensor_actuator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::sensor_actuator::Light > {
  static const char* value()
  {
    return "a8e1711976dcda1b8b978eee81e85498";
  }

  static const char* value(const ::sensor_actuator::Light&) { return value(); }
};

template<>
struct DataType< ::sensor_actuator::Light > {
  static const char* value()
  {
    return "sensor_actuator/Light";
  }

  static const char* value(const ::sensor_actuator::Light&) { return value(); }
};


// service_traits::MD5Sum< ::sensor_actuator::LightRequest> should match 
// service_traits::MD5Sum< ::sensor_actuator::Light > 
template<>
struct MD5Sum< ::sensor_actuator::LightRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_actuator::Light >::value();
  }
  static const char* value(const ::sensor_actuator::LightRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_actuator::LightRequest> should match 
// service_traits::DataType< ::sensor_actuator::Light > 
template<>
struct DataType< ::sensor_actuator::LightRequest>
{
  static const char* value()
  {
    return DataType< ::sensor_actuator::Light >::value();
  }
  static const char* value(const ::sensor_actuator::LightRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sensor_actuator::LightResponse> should match 
// service_traits::MD5Sum< ::sensor_actuator::Light > 
template<>
struct MD5Sum< ::sensor_actuator::LightResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_actuator::Light >::value();
  }
  static const char* value(const ::sensor_actuator::LightResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_actuator::LightResponse> should match 
// service_traits::DataType< ::sensor_actuator::Light > 
template<>
struct DataType< ::sensor_actuator::LightResponse>
{
  static const char* value()
  {
    return DataType< ::sensor_actuator::Light >::value();
  }
  static const char* value(const ::sensor_actuator::LightResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SENSOR_ACTUATOR_MESSAGE_LIGHT_H
